module Skargo;

fun clean(): (Cli.Command, (GlobalContext, Cli.ParseResults) ~> void) {
  (
    Cli.Command("clean")
      .about("Remove the target directory")
      .arg(Cli.Arg::string("manifest-path").about("Path to Skargo.toml"))
      .arg(
        Cli.Arg::string("target")
          .value_name("TRIPLE")
          .about("Target triple to clean output for"),
      )
      .arg(
        Cli.Arg::string("target-dir")
          .value_name("PATH")
          .about("Directory for all generated artifacts"),
      )
      .args(kProfileArgs),
    execClean,
  )
}

fun execClean(gctx: GlobalContext, args: Cli.ParseResults): void {
  ws = workspace(args, gctx);
  // TODO: Clean only for a specific arch specified with `--target`?
  p = System.subprocess(Array["rm", "-rf", ws.target_dir()]).fromSuccess();
  if (!p.success()) {
    gctx.console.error(subprocess_error_message(p));
    skipExit(2);
  }
}

module end;
