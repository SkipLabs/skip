module SKStoreTest;

fun testMap(): mutable SKStore.Context {
  data = Array[(SKStore.IID(1), SKStore.IntFile(1)), (SKStore.IID(2), SKStore.IntFile(2))];
  SKStore.run(context ~> {
    dir1 = context.mkdir(
      SKStore.IntFile::fromFile,
      SKStore.DirName::create("/dir1/"),
      data,
    );
    dir2 = dir1.contextWriterMap(
      SKStore.IntFile::fromFile,
      context,
      SKStore.DirName::create("/dir2/"),
      (_context, writer, v) ~> writer.write(SKStore.IID(0), v),
    );
    _dir3 = dir2.contextWriterKeyValues(
      SKStore.IntFile::fromFile,
      context,
      SKStore.DirName::create("/dir3/"),
      (_context, writer, _key, v) ~> {
        writer.writeArray(SKStore.IID(1), v)
      },
    );
  });
}

fun testMap2(): mutable SKStore.Context {
  dataStr1 = Array[
    (SKStore.IID(1), SKStore.StringFile("1")),
    (SKStore.IID(2), SKStore.StringFile("2")),
  ];
  dataStr2 = Array[
    (SKStore.IID(1), SKStore.StringFile("3")),
    (SKStore.IID(2), SKStore.StringFile("4")),
  ];
  SKStore.run(context ~> {
    dirStr1 = context.mkdir(
      SKStore.StringFile::fromFile,
      SKStore.DirName::create("/dirStr1/"),
      dataStr1,
    );
    dirStr2 = context.mkdir(
      SKStore.StringFile::fromFile,
      SKStore.DirName::create("/dirStr2/"),
      dataStr2,
    );
    dir1 = dirStr1.map(
      SKStore.IntFile::fromFile,
      context,
      SKStore.DirName::create("/dir1/"),
      (v ~> SKStore.IntFile(v.value.toInt())),
    );
    dir2 = dirStr2.map(
      SKStore.IntFile::fromFile,
      context,
      SKStore.DirName::create("/dir2/"),
      (v ~> SKStore.IntFile(v.value.toInt())),
    );
    _dir3 = dir1.contextWriterKeyMap(
      SKStore.IntFile::fromFile,
      context,
      SKStore.DirName::create("/dir3/"),
      (context, writer, key, v) ~> {
        dirName = SKStore.DirName::create("/dir3/" + key + "/");
        _ = dir2.map(SKStore.IntFile::fromFile, context, dirName, (v) ~> v);
        writer.write(key, v);
      },
    );
  });
}
