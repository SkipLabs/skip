/*****************************************************************************/
/* Testing that the time in FixedDirs works. */
/*****************************************************************************/
module SKStoreTest;

@test
fun testFixedDirTime(): void {
  rand = Random::mcreate(23);
  dmap = SKStore.DMap::empty();
  size = 100;
  valueSize = 100;
  dirName = SKStore.DirName::create("/foo/");
  for (_ in Range(0, size)) {
    map = SortedMap[];
    for (i in Range(0, valueSize)) {
      baseName = SKStore.IID(i);
      path = SKStore.Path::create(dirName, baseName);
      !map[path] = Array[
        (SKStore.IntFile(rand.random(0, valueSize)) : SKStore.File),
      ];
    };
    !dmap = dmap.set(
      SKStore.TickRange::create(SKStore.Tick(rand.random(0, size))),
      (SKStore.IID(rand.random(0, size)) : SKStore.Key),
      map,
    );
  };
  acc = mutable Vector[];
  dmap.itemsWithTick().each(item -> {
    (key, valueMap, tick) = item;
    for (source => value in valueMap) {
      acc.push(SKStore.FixedRow(key, value, source, tick))
    }
  });
  farr = SKStore.FixedDir::create(acc);
  for (i in Range(0, 1000)) {
    set1 = dmap.getChangesAfter(SKStore.Tick(i));
    set2 = farr.getChangesAfter(SKStore.Tick(i));
    if (!set1.difference(set2).isEmpty() || !set2.difference(set1).isEmpty()) {
      debug(i);
      debug(dmap.getChangesAfter(SKStore.Tick(i)));
      debug(farr.getChangesAfter(SKStore.Tick(i)));
      invariant_violation("Should be the same")
    }
  };
}

module end;
