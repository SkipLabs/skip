fun main(): void {
  while (1 == 1) {
    print_string("Pass");
    break void;
  };

  i = 0;
  s = "";

  while (i < 10) !i = i + 1 else print_string("Pass");
  !i = 0;
  !s = while (i < 10) !i = i + 1 else "Pass";
  print_string(s);
  !i = 0;
  !s = while (i < 11) {
    if (i == 10) break "Pass";
    !i = i + 1
  } else {
    "FAIL"
  };
  print_string(s);

  !i = 0;
  !s = while (i < 11) {
    if (i == 11) break "FAIL";
    !i = i + 1
  } else {
    "Pass"
  };
  print_string(s);

  !i = 0;
  !s = while (false) break "FAIL" else "Pass";
  print_string(s);

  !i = 0;
  !s = while (1 == 1) break "Pass" else "FAIL";
  print_string(s);

  !i = 0;
  !s = while (i < 11) {
    if (i < 10) {
      !i = i + 1;
      continue
    };
    break "Pass";
  } else {
    "FAIL"
  };
  print_string(s);

  !i = 0;
  !s = while (i < 10) {
    if (i < 11) {
      !i = i + 1;
      continue
    };
    break "FAIL";
  } else {
    "Pass"
  };
  print_string(s);

  try {
    _ =
      1 +
      (while (1 == 1) {
        throw MyExn()
      } else {
        invariant_violation("impossible")
      })
  } catch {
  | e @ MyExn() -> print_string(e.getMessage())
  | _ -> print_string("Fail")
  }
}

class MyExn() extends Exception {
  fun getMessage(): String {
    "Pass"
  }
}
