base class Foo<T> {
  fun doIt(x: T): T;
}

class Bar<T>(x: T) extends Foo<T> {
  fun get(): T {
    this.x
  }
  fun doIt(x: T): T {
    x
  }
}

class Boom<T: Float>() extends Foo<T> {
  fun doIt(x: T): T {
    _ = x + 112.0;
    x
  }
}

fun matcher<T>(v: Foo<T>, y: T): T {
  v match {
  | x @ Bar _ -> x.doIt(x.get())
  | x @ Boom _ ->
    _ = 3.0 + x.doIt(y);
    y
  }
}

fun main(): void {
  x: Boom<Float> = Boom();
  _y = matcher(x, 5.0) + 5.0;
  print_string("Pass")
}
