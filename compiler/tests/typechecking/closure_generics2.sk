class Container<T: frozen>() {
  fun set(T): this {
    this
  }
}

class X() {
  fun get(): Int {
    42
  }
}

base class Foo<T>

class Bar<T>() extends Foo<T>
class Baz<T>{closure: T ~> Bool} extends Foo<T>

fun test(): Container<Foo<X>> {
  c = Container<Foo<X>>();
  !c=.set(Bar());
  !c=.set(
    Baz{
      closure => (x ~> {
        y: X = x;
        y.get() == 42
      }),
    },
  );
  c
}

fun main(): void {
  print_string("OK")
}
