base class MyList<+T>() {
  children =
  | Nil
  fun add<T2>[T: T2](T2): MyList<T2> {
    Nil()
  }
}
base class A
class B() extends A
class C() extends A

fun makeMyListB(): MyList<B> {
  Nil()
}
fun makeMyListA(): MyList<A> {
  Nil()
}

fun testMyListA(): MyList<A> {
  l = makeMyListB();
  l.add(C())
}

fun testAddB(): MyList<A> {
  l = makeMyListA();
  l.add(B())
}

fun main(): void {
  print_string("Pass")
}
