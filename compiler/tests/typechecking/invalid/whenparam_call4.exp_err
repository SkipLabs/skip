File "./typechecking/invalid/whenparam_call4.sk", line 16, characters 13-66:
Constraint not satisfied
14 |
15 | fun main(): void {
16 |   print_raw(bar_to_foo(Bar{x => Test.MixedString("Fail")}).hello())
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
17 | }

File "./typechecking/invalid/whenparam_call4.sk", line 16, characters 33-56:
The type: Test.MixedString
14 |
15 | fun main(): void {
16 |   print_raw(bar_to_foo(Bar{x => Test.MixedString("Fail")}).hello())
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^
17 | }

File "./typechecking/invalid/whenparam_call4.sk", line 2, characters 16-28:
Is not a subtype of: Test.MixedInt
1 | base class Foo<T>{x: T} {
2 |   fun hello[T: Test.MixedInt](): String;
  |                ^^^^^^^^^^^^^
3 | }

File "./typechecking/invalid/whenparam_call4.sk", line 2, characters 16-28:
This type was found to be a fixed upper bound and could not be changed to a compatible type.
To make these types compatible, annotate as this type: Test.MixedScalar
1 | base class Foo<T>{x: T} {
2 |   fun hello[T: Test.MixedInt](): String;
  |                ^^^^^^^^^^^^^
3 | }
