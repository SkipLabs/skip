const IntConst: Int = 42;

base class B

class PC(i: Int) extends B {}
class NC{s: String, b: Bool} extends B {}

fun matchesConst(): Bool {
  (40 + 2) is "Hello";
}

fun matchesTuple(): Bool {
  (40 + 2, !true, "Hello") is (false, 42, _);
}

fun matchesParen(): Bool {
  (40 + 2) is ("Hello");
}

fun matchesClass(): Bool {
  PC(42) is NC _;
}

fun matchesNamedArgs(): Bool {
  (NC{s => "Hello", b => false} : B) is NC{b => "Fail"};
}

fun matchesPositionalArgs(): Bool {
  (PC(42) : B) is PC(false);
}

fun matchesNegativeLiteral(): Bool {
  (true) is -12;
}

fun main(): void {
  void;
}
