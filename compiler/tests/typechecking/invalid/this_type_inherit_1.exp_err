File "./typechecking/invalid/this_type_inherit_1.sk", line 4, characters 5-10:
In 'MyCons's version of the member 'ex1' inherited from 'MyList'
2 |   children =
3 |   | MyNil()
4 |   | MyCons(T, MyList<T>)
  |     ^^^^^^
5 |

File "./typechecking/invalid/this_type_inherit_1.sk", line 8, characters 5-11:
The value returned from the function is incompatible with the return type '(this = MyCons<T>)'
 6 |   // retval incompatible with ret type in the context of MyCons
 7 |   fun ex1(): this {
 8 |     MyNil()
   |     ^^^^^^^
 9 |   }

File "./typechecking/invalid/this_type_inherit_1.sk", line 8, characters 5-11:
The type: MyNil<_>
 6 |   // retval incompatible with ret type in the context of MyCons
 7 |   fun ex1(): this {
 8 |     MyNil()
   |     ^^^^^^^
 9 |   }

File "./typechecking/invalid/this_type_inherit_1.sk", line 7, characters 14-17:
Is not a subtype of: MyCons<T>
5 |
6 |   // retval incompatible with ret type in the context of MyCons
7 |   fun ex1(): this {
  |              ^^^^
8 |     MyNil()

File "./typechecking/invalid/this_type_inherit_1.sk", line 7, characters 14-17:
This type was found to be a fixed upper bound and could not be changed to a compatible type.
To make these types compatible, annotate as this type: MyList<T>
5 |
6 |   // retval incompatible with ret type in the context of MyCons
7 |   fun ex1(): this {
  |              ^^^^
8 |     MyNil()
