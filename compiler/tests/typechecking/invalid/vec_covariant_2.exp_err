File "./typechecking/invalid/vec_covariant_2.sk", line 11, characters 7-27:
Invalid lambda type
 9 |
10 | fun main(): void {
11 |   f = _ -> MyContainer(B());
   |       ^^^^^^^^^^^^^^^^^^^^^
12 |   _ = listOfObjects(f);

File "./typechecking/invalid/vec_covariant_2.sk", line 11, characters 24-26:
The invariant type: B
 9 |
10 | fun main(): void {
11 |   f = _ -> MyContainer(B());
   |                        ^^^
12 |   _ = listOfObjects(f);

File "./typechecking/invalid/vec_covariant_2.sk", line 6, characters 39-39:
Is incompatible with the invariant type: A
4 | class B() extends A
5 |
6 | fun listOfObjects<T>(T -> MyContainer<A>): void {
  |                                       ^
7 |   void

File "./typechecking/invalid/vec_covariant_2.sk", line 11, characters 24-26:
These types were found to be fixed upper bounds and could not be changed to a compatible type.
To make these types compatible, annotate as this type: A
 9 |
10 | fun main(): void {
11 |   f = _ -> MyContainer(B());
   |                        ^^^
12 |   _ = listOfObjects(f);
