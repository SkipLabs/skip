File "./typechecking/invalid/pattern_match_constraints3.sk", line 10, characters 5-9:
Invalid pattern. Constraint not satisfied when refining the type for this branch
 8 | fun matcher<T: C1>(x: Bar<T>): Int {
 9 |   x match {
10 |   | Foo() -> 42
   |     ^^^^^
11 |   }

File "./typechecking/invalid/pattern_match_constraints3.sk", line 6, characters 25-26:
The type: C2
4 |
5 | base class Bar<+T>
6 | class Foo() extends Bar<C2>
  |                         ^^
7 |

File "./typechecking/invalid/pattern_match_constraints3.sk", line 8, characters 16-17:
Is not a subtype of: C1
 6 | class Foo() extends Bar<C2>
 7 |
 8 | fun matcher<T: C1>(x: Bar<T>): Int {
   |                ^^
 9 |   x match {

File "./typechecking/invalid/pattern_match_constraints3.sk", line 8, characters 16-17:
This type was found to be a fixed upper bound and could not be changed to a compatible type.
To make these types compatible, annotate as this type: CBase
 6 | class Foo() extends Bar<C2>
 7 |
 8 | fun matcher<T: C1>(x: Bar<T>): Int {
   |                ^^
 9 |   x match {
