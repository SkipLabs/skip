File "./typechecking/invalid/infer_frozen_fun_3.sk", line 5, characters 3-5:
Constraint not satisfied
3 | }
4 | fun test(): void {
5 |   foo(Array[], mutable Array[])
  |   ^^^
6 | }

File "./typechecking/invalid/infer_frozen_fun_3.sk", line 5, characters 16-30:
The mutable type 'mutable Array<_>' appeared inside an immutable type.
3 | }
4 | fun test(): void {
5 |   foo(Array[], mutable Array[])
  |                ^^^^^^^^^^^^^^^
6 | }

File "./typechecking/invalid/infer_frozen_fun_3.sk", line 1, characters 12-17:
This type is immutable, and immutable types must be deeply frozen. To make it mutable, preface it with 'mutable', or for generics try removing any 'frozen' constraint.
1 | fun foo<T: frozen>(Array<T>, T): void {
  |            ^^^^^^
2 |   void

File "./typechecking/invalid/infer_frozen_fun_3.sk", line 5, characters 24-30:
To keep it immutable, try calling 'freeze' on any expression of this type, or try removing the 'mutable' modifier
3 | }
4 | fun test(): void {
5 |   foo(Array[], mutable Array[])
  |                        ^^^^^^^
6 | }
