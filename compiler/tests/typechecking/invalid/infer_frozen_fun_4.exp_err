File "./typechecking/invalid/infer_frozen_fun_4.sk", line 5, characters 7-9:
Constraint not satisfied
3 | }
4 | fun test(): void {
5 |   _ = foo(mutable Array[])
  |       ^^^
6 | }

File "./typechecking/invalid/infer_frozen_fun_4.sk", line 5, characters 11-25:
The mutable type 'mutable Array<_>' appeared inside an immutable type.
3 | }
4 | fun test(): void {
5 |   _ = foo(mutable Array[])
  |           ^^^^^^^^^^^^^^^
6 | }

File "./typechecking/invalid/infer_frozen_fun_4.sk", line 1, characters 12-17:
This type is immutable, and immutable types must be deeply frozen. To make it mutable, preface it with 'mutable', or for generics try removing any 'frozen' constraint.
1 | fun foo<T: frozen>(T): Array<T> {
  |            ^^^^^^
2 |   Array[]

File "./typechecking/invalid/infer_frozen_fun_4.sk", line 5, characters 19-25:
To keep it immutable, try calling 'freeze' on any expression of this type, or try removing the 'mutable' modifier
3 | }
4 | fun test(): void {
5 |   _ = foo(mutable Array[])
  |                   ^^^^^^^
6 | }
