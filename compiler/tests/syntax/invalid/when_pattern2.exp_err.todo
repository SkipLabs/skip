File "./syntax/invalid/when_pattern2.sk", line 12, characters 20-21:
Constraint not satisfied
10 |   print_raw(
11 |     x match {
12 |     | Bar(y) if (y == true) -> "Error\n"
   |                    ^^
13 |     | _ -> "Fail\n"

File "./syntax/invalid/when_pattern2.sk", line 12, characters 23-26:
The type: Bool
10 |   print_raw(
11 |     x match {
12 |     | Bar(y) if (y == true) -> "Error\n"
   |                       ^^^^
13 |     | _ -> "Fail\n"

File "./../prelude/core/primitives/Int.sk", line 9, characters 13-20:
Is not a subtype of: Integral
 7 |
 8 | native value class Int uses Number, Integral {
 9 |   fun ==<I: Integral>(other: I): Bool {
   |             ^^^^^^^^
10 |     this.eqImpl(other.toInt())

File "./../prelude/core/primitives/Int.sk", line 9, characters 13-20:
This type was found to be a fixed upper bound and could not be changed to a compatible type.
To make these types compatible, annotate as this type: Orderable
 7 |
 8 | native value class Int uses Number, Integral {
 9 |   fun ==<I: Integral>(other: I): Bool {
   |             ^^^^^^^^
10 |     this.eqImpl(other.toInt())

