/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

module Config;

private class Config{
  release: Bool,
  verbose: Bool,
  optConfig: Optimize.Config,
  mainConfig: Main.Config,
  unknown: Array<String>,
} {
  static fun make(results: Cli.ParseResults): this {
    optConfig = Optimize.Config::make(
      results.getBool("dce"),
      results.getBool("peephole"),
      results.getBool("control"),
      results.getBool("regpromote"),
      results.getBool("inline"),
      results.getBool("ipa"),
      results.getBool("goto"),
      results.getBool("verify"),
    );
    mainConfig = Main.Config::make(results);

    release = results.getBool("release");
    verbose = results.getBool("verbose");
    // preserve legacy behavior of capturing all unmatched args in a single array
    unknown = results.getArray("files");

    Config{release, verbose, optConfig, mainConfig, unknown}
  }
}

module end;
