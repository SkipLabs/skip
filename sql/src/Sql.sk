module SKDB;

class IgnoreAndContinue() extends Exception {
  fun toString(): String {
    this.getMessage()
  }
}

base class Error extends Exception

class SqlError(pos: Int, msg: String) extends Error {
  fun getMessage(): String {
    this.msg
  }
}

class ParserError(err: SQLParser.Error) extends Error

class Conflict(
  pos: Int,
  msg: String,
  values: Array<(Int, ?CValue)>,
  row: Array<RowValues>,
) extends Exception {
  fun getMessage(): String {
    this.msg
  }
}

fun error<T>(pos: Int, msg: String): T {
  throw (SqlError(pos, msg))
}

value class Pos(value: Int) uses Equality

fun errorNbr<T>(_nbr: Int, pos: Int, msg: String): T {
  throw (SqlError(pos, msg))
}
