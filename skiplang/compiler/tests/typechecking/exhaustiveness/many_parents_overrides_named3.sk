base class Top
base class P1{p1: Int} extends Top
base class P2{p2: Int} extends Top
base class P3{p3: Int} extends Top
base class P4{p4: Int} extends Top

base class SP1{sp1: Bool} extends P1
base class SP2{sp2: String} extends P2
base class SP3{sp3: Int} extends P3
base class SP4{sp4: Char} extends P4

class Join{j: String} extends SP1, SP2, SP3, SP4

fun myMatch(x: Top): String {
  x match {
  | Join{sp1 => true, sp2 => "b", sp3 => 3, sp4 => 'c'} -> "P"
  | Join{sp1 => false, sp2 => "b", sp3 => 3, sp4 => 'c'} -> "a"
  | Join{j => "a", sp2 => "c", sp3 => 3, sp4 => 'c'} -> "s1"
  | Join{sp2 => "c"} -> "s2"
  | Join _ -> "\n"
  }
}

fun main(): void {
  x = Join{
    j => "a",
    sp1 => true,
    p1 => 1,
    sp2 => "b",
    p2 => 2,
    sp3 => 3,
    p3 => 4,
    sp4 => 'c',
    p4 => 5,
  };
  y = Join{
    j => "a",
    sp1 => false,
    p1 => 1,
    sp2 => "b",
    p2 => 2,
    sp3 => 3,
    p3 => 4,
    sp4 => 'c',
    p4 => 5,
  };
  z = Join{
    j => "a",
    sp1 => false,
    p1 => 1,
    sp2 => "c",
    p2 => 2,
    sp3 => 3,
    p3 => 4,
    sp4 => 'c',
    p4 => 5,
  };
  w = Join{
    j => "f",
    sp1 => false,
    p1 => 1,
    sp2 => "c",
    p2 => 2,
    sp3 => 3,
    p3 => 4,
    sp4 => 'c',
    p4 => 5,
  };
  t = Join{
    j => "f",
    sp1 => false,
    p1 => 1,
    sp2 => "d",
    p2 => 2,
    sp3 => 3,
    p3 => 4,
    sp4 => 'c',
    p4 => 5,
  };
  print_raw(myMatch(x) + myMatch(y) + myMatch(z) + myMatch(w) + myMatch(t))
}
